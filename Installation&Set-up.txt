
## ‚öôÔ∏è Installation & Setup

Follow these steps to run this project locally on your machine.

1.  **Clone the repository**
    ```bash
    git clone https://github.com/callmeAyanda/Socio-Economic_InequalityAnalysis_in_SouthAfrica_Project
    cd south-africa-inequality-dashboard
    ```

2.  **Create a virtual environment (recommended)**
    ```bash
    # Using venv
    python -m venv venv
    source venv/bin/activate  # On Windows: venv\Scripts\activate
    ```

3.  **Install the required dependencies**
    ```bash
    pip install -r requirements.txt
    ```

4.  **Run the Streamlit app**
    ```bash
    streamlit run app.py
    ```
5.  **Open your browser** and navigate to the local URL provided (typically `http://localhost:8501`).

## üìà Data Methodology

### Data Sources (Synthetic)
*This project currently uses sophisticated synthetic data modeled after real-world patterns from the following official sources:*
- **Statistics South Africa (Stats SA)**: Census and Community Survey data for demographic and socio-economic indicators.
- **Municipal Money (National Treasury)**: Financial and performance data for municipalities.
- **Municipal Demarcation Board (MDB)**: Geographic boundaries for municipalities and wards.

*The synthetic data generation script (`notebooks/01_eda_and_data_creation.ipynb`) applies realistic adjustments based on province to mirror known disparities, such as higher economic indicators in Gauteng and the Western Cape and higher unemployment in the Eastern Cape.*

### Composite Index Calculation
The Composite Development Index is a weighted average of normalized key performance indicators (KPIs):
1.  **Normalization**: Each KPI is scaled from 0 to 1.
2.  **Weighting**: Weights are applied based on perceived importance for development.
    - Unemployment Rate (25%)
    - Access to Piped Water (15%)
    - Access to Electricity (15%)
    - Median Income (25%)
    - Education Index (20%)
3.  **Aggregation**: The weighted scores are summed and scaled to 0-100.

## üöÄ Deployment

This app can be deployed for free on Streamlit Community Cloud:
1.  Fork this repository to your own GitHub account.
2.  Create an account on [Streamlit Community Cloud](https://streamlit.io/cloud).
3.  Click "New app", select your repository, branch (`main`), and set the main file path to `app.py`.
4.  Click "Deploy". Your app will have a public URL.

## ü§ù Contributing

Contributions, issues, and feature requests are welcome! Feel free to check the [issues page](https://github.com/your-username/south-africa-inequality-dashboard/issues).

If you want to contribute:
1.  Fork the Project.
2.  Create your Feature Branch (`git checkout -b feature/AmazingFeature`).
3.  Commit your Changes (`git commit -m 'Add some AmazingFeature'`).
4.  Push to the Branch (`git push origin feature/AmazingFeature`).
5.  Open a Pull Request.

## üìù Future Enhancements

- [ ] **Integrate Real Data APIs**: Replace synthetic data with live connections to Stats SA and Municipal Money APIs.
- [ ] **Advanced Geospatial Visualization**: Implement interactive choropleth maps using GeoPandas and Folium.
- [ ] **Predictive Modeling**: Add time-series forecasting to predict future trends in unemployment or service delivery.
- [ ] **User Authentication**: Allow users to save their reports and comparisons.
- [ ] **Export Functionality**: Enable users to download charts and datasets.

## üìÑ License

This project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details. This means you can freely use and modify the code for personal and commercial purposes.

## üôè Acknowledgments

- Data patterns are modeled after publicly available information from **Statistics South Africa**.
- Inspired by the need for data-driven policy and social impact projects.
- Built with amazing open-source tools like Streamlit, Pandas, and Plotly.

---

**Disclaimer**: This project currently uses synthetic data generated to mimic real-world South African socio-economic patterns. The insights are illustrative and intended for demonstration of technical capability. In a production environment, it would be connected to official data sources.
